{"version":3,"sources":["app/entities/person/Sex.ts","assets/images/logo/fam_trees.svg","components/frame/navbar.tsx","components/frame/footer.tsx","components/pages/treeSelection/TreeListElement.tsx","components/pages/common/RedFormControl.tsx","components/pages/common/RedSubmitButton.tsx","components/pages/common/BlackCancelButton.tsx","components/pages/common/BlackRedModal.tsx","app/entities/BaseEntity.ts","app/entities/famtree/FamTree.ts","components/pages/treeSelection/CreateNewTree.tsx","components/pages/common/H1Title.tsx","components/pages/common/FlyButton.tsx","components/pages/common/EntitySearch.tsx","components/pages/TreeSelection.tsx","app/entities/person/Person.ts","components/pages/common/PersonViews.ts","components/pages/personSelection/CreateNewPerson.tsx","assets/icons/female-solid.svg","assets/icons/male-solid.svg","components/pages/personSelection/PersonListElement.tsx","app/entities/famtree/Class.ts","app/managers/PersonManager.ts","components/pages/PersonSelection.tsx","components/pages/common/PersonViewSwitch.tsx","app/endpoints/PersonEndpoints.ts","components/pages/common/PersonProfile.tsx","components/pages/graphPhone/MainCard.tsx","components/pages/graphPhone/RelativeCard.tsx","app/entities/famtree/MemberClass.ts","components/pages/common/AddPerson.tsx","components/pages/graphPhone/AddRelative.tsx","components/pages/GraphPhone.tsx","components/pages/personDetails/PersonDetailsCard.tsx","components/pages/personDetails/PersonSpouse.tsx","components/pages/personDetails/GroupTitle.tsx","components/pages/personDetails/PersonRelativeCard.tsx","components/pages/PersonDetails.tsx","components/pages/personEdit/PersonEditDetailsCard.tsx","components/pages/personEdit/PersonAddRelative.tsx","components/pages/PersonEdit.tsx","components/PersonDetailsController.tsx","app/entities/famtree/FamilyMember.ts","app/services/FamilyBuilder.ts","components/PersonController.tsx","app/endpoints/TreeEndpoints.ts","app/endpoints/PersonParentEndpoints.ts","app/managers/ParentManager.ts","components/ParentController.tsx","components/TreeController.tsx","components/PageController.tsx","app/effects/particles.ts","components/pages/common/Particles.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Sex","Toggler","Navbar","Toggle","aria-controls","className","bg","variant","expand","Brand","href","src","Logo","alt","height","Collapse","id","Nav","Link","Container","Row","Col","famTree","onClick","getName","getPeople","length","onChange","value","placeholder","type","FormControl","e","children","disabled","Button","show","onSubmit","onClose","titleRed","titleWhite","submitDisabled","Modal","size","centered","backdrop","keyboard","Header","Title","Body","Footer","BlackCancelButton","RedSubmitButton","BaseEntity","this","constructor","name","getId","FamTree","people","treeSize","person","Object","values","onCreate","onCancel","useState","setName","BlackRedModal","RedFormControl","target","caps","red","white","props","icon","options","filter","Map","loading","emptyList","loadingText","search","setSearch","filtered","entity","map","trees","doNewTree","setShow","selected","setSelected","H1Title","EntitySearch","TreeListElement","handleSelect","toLowerCase","includes","CreateNewTree","tree","FlyButton","getDateFormat","date","reDate","Date","day","getDate","toString","month","getMonth","year","getFullYear","padStart","Person","firstName","lastName","sex","treeId","birthday","deathDate","getFirstName","getLastName","getSex","MALE","getTreeId","getDeathDate","Dummy","PersonViews","personManager","setFirstName","setLastName","setBirthday","setDeathDate","setSex","newPerson","parseInt","String","addPerson","handleCreatePerson","as","Class","PHONE","male","female","OverlayTrigger","placement","overlay","Tooltip","preventDefault","DETAILS","PersonManager","add","remove","update","onBack","view","setView","modifiedManager","removePerson","updatePerson","CreateNewPerson","initView","Create","a","body","getBirthday","fetch","JSON","stringify","method","headers","response","json","data","Swal","fire","title","timer","showCancelButton","showConfirmButton","Delete","status","Update","List","p","img","lg","md","sm","addon","center","familyMember","onViewChange","piblings","parents","parent","siblings","PersonProfile","isAlive","tag","xs","definitions","PARENT","CHILD","SIBLING","PIBLING","GRANDPARENTS","MemberClass","famClass","PersonListElement","parentManager","isParent","familyMembers","doHide","f","undefined","addParent","console","log","AddPerson","mom","dad","RelativeCard","AddRelative","FEMALE","spaceBetween","slidesPerView","MainCard","DataRow","label","onEdit","Card","spouses","kids","PersonDetailsCard","GroupTitle","s","PersonSpouse","PersonRelativeCard","DataInsert","Form","Group","Label","column","Control","updated","onCancelEdit","PersonEditDetailsCard","PersonAddRelative","xl","edit","setEdit","handleCancelEdit","PersonDetails","PersonEdit","FamilyMember","FamilyBuilder","parentMap","members","child","n","i","keyP","addToMap","member","push","key","mapper","PersonController","handleDeletePerson","state","build","setState","handleEditPerson","PersonSelection","onDeselect","PersonViewSwitch","handleViewChange","GraphPhone","PersonDetailsController","Component","t","personId","parentId","ListTreeParents","personParents","ParentManager","ParentController","removeParent","items","keyData","item","TreeController","handleDeleteTree","handleCreateTree","newTree","TreeSelection","onDeSelect","ParticleAnimation","canvas","color","radius","ctx","particles","mouse","keepRadius","particlesCount","particleColor","getContext","x","y","width","setCanvasSize","window","addEventListener","event","innerWidth","innerHeight","Math","min","random","size2","directionX","directionY","Particle","requestAnimationFrame","animate","clearRect","connect","opacityValue","b","aX","aY","bX","bY","distance","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","PI","fillStyle","fill","dx","dy","sqrt","size10","draw","Particles","React","createRef","animation","current","ref","style","position","zIndex","App","PageController","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aeaeba6d.chunk.js","sourcesContent":["enum Sex {\r\n    MALE,\r\n    FEMALE\r\n}\r\n\r\nexport default Sex","export default __webpack_public_path__ + \"static/media/fam_trees.bd736a6d.svg\";","import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Logo from '../../assets/images/logo/fam_trees.svg';\r\n\r\n\r\nexport default () => {\r\n    const Toggler = <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className='border-0 animated-icon'>\r\n        <span/>\r\n        <span/>\r\n        <span/>\r\n    </Navbar.Toggle>;\r\n\r\n    return (<Navbar className='py-1 border-bottom border-primary' bg=\"dark\" variant='dark' expand={false}>\r\n        <Navbar.Brand href=\"/\">\r\n            <img src={Logo} alt=\"famtrees\" height={45}/>\r\n        </Navbar.Brand>\r\n        {Toggler}\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"m-auto\">\r\n                <Nav.Link className='m-auto text-uppercase' href=\"#\">SEARCH AND BREADCRUMB</Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>)\r\n}","import Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nexport default () =>\r\n    <footer className='p-3'>\r\n        <hr className='footer-hr'/>\r\n        <Container className='mt-3'>\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <strong>famtree Homepage</strong>\r\n                    </Row>\r\n                    <Row>\r\n                        <strong><a href='https://www.netgroup.com/'>NetGroup</a></strong>\r\n                    </Row>\r\n                </Col>\r\n                <Col/>\r\n                <Col className='text-right'>\r\n                    Mr.Toruabi\r\n                    <hr className='m-0'/>\r\n                    Since 2021\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport IFamTree from \"../../../app/interfaces/IFamTree\";\r\n\r\ntype Props = {\r\n    famTree: IFamTree,\r\n    onClick: Function\r\n}\r\n\r\nexport default ({famTree, onClick}: Props) => {\r\n    return (\r\n        <Row className='my-3 p-2 mx-2 border-white border-bottom border-top hover bg-dark' onClick={() => onClick()}>\r\n            <Col className='text-primary fs-3'>\r\n                {famTree.getName()}\r\n            </Col>\r\n            <Col className='text-right align-self-center'>\r\n                {famTree.getPeople().length && <>{famTree.getPeople().length} Members</>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import FormControl from \"react-bootstrap/FormControl\";\r\n\r\ntype Props = {\r\n    onChange: Function,\r\n    value: string,\r\n    placeholder?: string,\r\n    type?: string\r\n}\r\n\r\nexport default ({onChange, value, placeholder = \"Search...\", type}: Props) => {\r\n    return (\r\n        <FormControl type={type} value={value} onChange={(e) => onChange(e)} placeholder={placeholder} className='bg-transparent fam-control border-bottom border-primary text-white'/>\r\n    )\r\n}","import Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    onClick: Function,\r\n    children: React.ReactNode,\r\n    disabled?: boolean\r\n}\r\n\r\nexport default ({onClick, children, disabled=false}:Props) =>\r\n    <Button disabled={disabled} className='rounded-0 text-dark btn-block r-br' onClick={() => onClick()}>{children}</Button>","import Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    onClick: Function,\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default ({onClick, children}: Props) =>\r\n    <Button className='rounded-0 bg-dark text-white r-bl btn-block' onClick={() => onClick()}>{children}</Button>","import Modal from \"react-bootstrap/Modal\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport RedSubmitButton from \"./RedSubmitButton\";\r\nimport BlackCancelButton from \"./BlackCancelButton\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    show: boolean,\r\n    onSubmit: Function,\r\n    submitDisabled?: boolean,\r\n    onClose: Function,\r\n    children: React.ReactNode,\r\n    titleRed?: string,\r\n    titleWhite?: string\r\n}\r\n\r\n\r\nexport default ({ show, onSubmit, onClose, children, titleRed, titleWhite, submitDisabled=false }: Props) => {\r\n    return (<Modal\r\n                show={show}\r\n                size=\"sm\"\r\n                centered\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n            {(titleRed || titleWhite) && <Modal.Header>\r\n                <Modal.Title className='m-auto text-primary'>{titleRed}<span className='text-white'>{titleWhite}</span></Modal.Title>\r\n            </Modal.Header>}\r\n                <Modal.Body >\r\n                    {children}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Row className=\"w-100\">\r\n                        <Col className='pr-0'>\r\n                            <BlackCancelButton onClick={onClose}>Back</BlackCancelButton>\r\n                        </Col>\r\n                        <Col className='pl-2'>\r\n                            <RedSubmitButton disabled={submitDisabled} onClick={onSubmit}>Create New</RedSubmitButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Footer>\r\n            </Modal>\r\n    )\r\n}","abstract class BaseEntity {\r\n\r\n    id: number;\r\n\r\n    protected constructor(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    toString() {\r\n        return `[${this.constructor.name}: ${this.getId()}]`\r\n    }\r\n}\r\n\r\nexport default BaseEntity;","import Person from \"../person/Person\";\r\nimport BaseEntity from \"../BaseEntity\";\r\nimport IFamTree from \"../../interfaces/IFamTree\";\r\n\r\nclass FamTree extends BaseEntity implements IFamTree {\r\n\r\n    name: string;\r\n    people: {[id:number]: Person};\r\n    treeSize: number;\r\n\r\n    constructor(id: number, name: string) {\r\n        super(id);\r\n        this.id = id;\r\n        this.name = name;\r\n        this.treeSize = 0\r\n        this.people = {}\r\n    }\r\n\r\n    getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    addPerson(person: Person): void {\r\n        if (!(person.getId() in this.people))\r\n            this.people[person.getId()] = person;\r\n    }\r\n\r\n    getPeople(): Person[] {\r\n        return Object.values(this.people);\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.getId()}, ${this.getName()}`\r\n    }\r\n\r\n    getPeopleMap(): {[id:number]: Person} {\r\n        return this.people;\r\n    }\r\n}\r\n\r\n\r\nexport default FamTree;","import {ChangeEvent, useState} from \"react\";\r\nimport RedFormControl from \"../common/RedFormControl\";\r\nimport BlackRedModal from \"../common/BlackRedModal\";\r\nimport FamTree from \"../../../app/entities/famtree/FamTree\";\r\n\r\ntype Props = {\r\n    onCreate: Function,\r\n    onCancel: Function\r\n    show?: boolean\r\n}\r\n\r\nexport default ({ onCreate, onCancel, show=true }: Props) => {\r\n    const [name, setName] = useState('');\r\n    const handleName = (e: ChangeEvent<HTMLInputElement>) => setName(e.target.value);\r\n\r\n    const onSubmit = () => {\r\n        onCreate(new FamTree(0, name));\r\n        setName('');\r\n    }\r\n    const allowed = ():boolean => {\r\n        return !!name\r\n    }\r\n\r\n    return (\r\n        <BlackRedModal submitDisabled={!allowed()} show={show} onClose={onCancel} onSubmit={onSubmit} titleRed='Create New ' titleWhite='Tree'>\r\n            <RedFormControl value={name} onChange={handleName} placeholder=\"Name...\"/>\r\n        </BlackRedModal>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype Props = {\r\n    caps?: boolean,\r\n    red?: string,\r\n    white?: string,\r\n    children?: React.ReactNode,\r\n}\r\n\r\nexport default ({caps=false, red='', white='', children}: Props) => {\r\n    return <h1 className={'text-center my-4' + (caps? ' text-uppercase': '')}>{children}<span className='text-primary'>{red}</span>{white}</h1>\r\n}","type Props = {\r\n    className?: string,\r\n    icon?: string,\r\n    onClick: Function,\r\n    children?: JSX.ElementChildrenAttribute\r\n}\r\n\r\nexport default (props: Props) => {\r\n    return (\r\n        <span onClick={() => props.onClick()} className={'fly-button bg-primary hover ' + (props.className || '')}>\r\n            {props.icon && <span className={'go go-3x text-dark p-2 ' + props.icon}/>}\r\n            {props.children}\r\n        </span>\r\n    )\r\n}","import Search from \"./RedFormControl\";\r\nimport {ChangeEvent, useState} from \"react\";\r\n\r\ntype Props = {\r\n    options: any[],\r\n    filter: Function,\r\n    Map: Function,\r\n    loading?: boolean,\r\n    loadingText?: string,\r\n    emptyList?: string\r\n}\r\n\r\nexport default ({options, filter, Map, loading=false, emptyList='', loadingText='Loading...'}: Props) => {\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleSearch = (e: ChangeEvent<HTMLInputElement>) => setSearch(e.target.value)\r\n    const filtered = options.filter(entity => filter(entity, search))\r\n\r\n    return (\r\n        <>\r\n            <Search onChange={handleSearch} value={search} />\r\n            { filtered.map(famTree => Map(famTree)) }\r\n            {loading && loadingText && <h4 className='mt-5 text-center'>{loadingText}</h4> }\r\n            {!loading && options.length === 0 && <h4 className='mt-5 text-center'>{emptyList}</h4>}\r\n        </>\r\n    );\r\n}\r\n","import TreeListElement from \"./treeSelection/TreeListElement\";\r\nimport CreateNewTree from \"./treeSelection/CreateNewTree\";\r\nimport {useState} from \"react\";\r\nimport H1Title from \"./common/H1Title\";\r\nimport FlyButton from \"./common/FlyButton\";\r\nimport IFamTree from \"../../app/interfaces/IFamTree\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport EntitySearch from \"./common/EntitySearch\";\r\n\r\ntype Props = {\r\n    trees: IFamTree[],\r\n    doNewTree: Function,\r\n    children: Function,\r\n    loading: boolean\r\n}\r\n\r\nexport default ({trees, doNewTree, children, loading}: Props) => {\r\n    const [show, setShow] = useState(false);\r\n    const [selected, setSelected] = useState<IFamTree|null>(null);\r\n\r\n    const onNewTree = (tree: IFamTree) => {\r\n        doNewTree(tree);\r\n        setShow(false);\r\n    }\r\n\r\n    const handleSelect = (famTree: IFamTree) => setSelected(famTree);\r\n\r\n    const MapComponent = (famTree: IFamTree) => {\r\n        return <TreeListElement key={famTree.getId()} onClick={()=>{ handleSelect(famTree) }} famTree={famTree}/>\r\n    }\r\n    const filter = (famTree: IFamTree, search:string): boolean =>\r\n        famTree.getName().toLowerCase().includes(search.toLowerCase())\r\n\r\n    return (\r\n        <>\r\n            {!selected &&\r\n            <Container>\r\n                <H1Title red=\"Family\" white=' trees' caps/>\r\n\r\n                <EntitySearch Map={MapComponent} filter={filter} options={trees} loading={loading} emptyList='Looks like no trees yet.'/>\r\n\r\n                <CreateNewTree show={show} onCreate={onNewTree} onCancel={() => setShow(false)}/>\r\n                <FlyButton onClick={() => setShow(true)} icon='go-add'/>\r\n            </Container>}\r\n            {selected && children(selected, () => setSelected(null)) }\r\n        </>\r\n    );\r\n}\r\n","import BaseEntity from \"../BaseEntity\";\r\nimport IPerson from \"../../interfaces/IPerson\";\r\nimport Sex from \"./Sex\";\r\n\r\nfunction getDateFormat(date: string | Date) {\r\n    const reDate = new Date(date)\r\n    const day = reDate.getDate().toString();\r\n    const month = (reDate.getMonth() + 1).toString();\r\n    const year = reDate.getFullYear().toString();\r\n\r\n    return `${year.padStart(4, '0')}-${month.padStart(2,'0')}-${day.padStart(2, '0')}`\r\n}\r\n\r\nclass Person extends BaseEntity implements IPerson {\r\n\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    sex: Sex;\r\n    birthday: string;\r\n    deathDate: string;\r\n    treeId: number;\r\n\r\n    static Dummy: Person;\r\n\r\n    constructor(id: number, firstName: string, lastName: string, sex: Sex, treeId: number, birthday: string, deathDate: string) {\r\n        super(id);\r\n        this.id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.sex = sex;\r\n        this.treeId = treeId;\r\n        this.birthday = getDateFormat(birthday? birthday: new Date('0001-01-01'));\r\n        this.deathDate = getDateFormat(deathDate? deathDate: new Date('0001-01-01'))\r\n    }\r\n\r\n    getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    getFirstName(): string {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName(): string {\r\n        return this.lastName;\r\n    }\r\n\r\n    toString():string {\r\n        return `${this.getId()}: ${this.getFirstName()} ${this.getLastName()}, ${this.getSex() === Sex.MALE ? 'Male' : 'Female'}, ${this.getTreeId()}`\r\n    }\r\n\r\n    getBirthday(): string {\r\n        return getDateFormat(this.birthday);\r\n    }\r\n\r\n    getDeathDate(): string {\r\n        return getDateFormat(this.deathDate);\r\n    }\r\n\r\n    getSex(): Sex {\r\n        return this.sex;\r\n    }\r\n\r\n    getTreeId(): number {\r\n        return this.treeId;\r\n    }\r\n\r\n    isAlive(): boolean {\r\n        return new Date(this.getDeathDate()) < new Date('0002-02-02');\r\n    }\r\n}\r\n\r\nPerson.Dummy = new Person(0, 'Dummy', 'Person', Sex.MALE, 1, '', '')\r\n\r\nexport default Person;\r\n","export enum PersonViews {\r\n    DETAILS,\r\n    PHONE,\r\n    DESKTOP\r\n}","import {useState} from \"react\";\r\nimport RedFormControl from \"../common/RedFormControl\";\r\nimport BlackRedModal from \"../common/BlackRedModal\";\r\nimport Person from \"../../../app/entities/person/Person\";\r\nimport IPersonManager from \"../../../app/interfaces/IPersonManager\";\r\nimport FlyButton from \"../common/FlyButton\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\ntype Props = {\r\n    personManager: IPersonManager\r\n    treeId: number,\r\n}\r\n\r\nexport default ({ personManager, treeId }: Props) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [birthday, setBirthday] = useState('')\r\n    const [deathDate, setDeathDate] = useState('')\r\n    const [sex, setSex] = useState(0)\r\n\r\n    const allowed = ():boolean => {\r\n        return !!firstName && !!lastName && !!birthday\r\n    }\r\n\r\n    const handleFirstName = (e:any) => setFirstName(e.target.value);\r\n    const handleLastName = (e:any) => setLastName(e.target.value);\r\n    const handleBirthday = (e:any) => setBirthday(e.target.value);\r\n    const handleDeathDate = (e:any) => setDeathDate(e.target.value);\r\n    const handleSex = (e:any) => setSex(e.target.value);\r\n\r\n    const handleCreatePerson = () => {\r\n        setShow(false)\r\n        const newPerson = new Person(0, firstName, lastName, parseInt(String(sex)), treeId, birthday, deathDate);\r\n        personManager.addPerson(newPerson);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setBirthday('');\r\n        setDeathDate('');\r\n        setSex(0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BlackRedModal submitDisabled={!allowed()} show={show} onClose={() => setShow(false)} onSubmit={() => handleCreatePerson()} titleRed='Create New ' titleWhite='Person'>\r\n                <RedFormControl value={firstName} onChange={handleFirstName} placeholder=\"First name...\"/>\r\n                <RedFormControl value={lastName} onChange={handleLastName} placeholder=\"Last name...\"/>\r\n                <RedFormControl value={birthday} onChange={handleBirthday} placeholder=\"Born...\" type='date'/>\r\n                <RedFormControl value={deathDate} onChange={handleDeathDate} placeholder=\"Died...\" type='date'/>\r\n                <FormControl as=\"select\" value={sex} onChange={handleSex} placeholder='Sex' className='bg-transparent fam-control border-bottom border-primary text-white'>\r\n                    <option value={0} className='bg-dark hover-primary'>Male</option>\r\n                    <option value={1} className='bg-dark hover-primary'>Female</option>\r\n                </FormControl>\r\n            </BlackRedModal>\r\n\r\n            <FlyButton onClick={() => setShow(true)} icon='go-add'/>\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/female-solid.f4f8022b.svg\";","export default __webpack_public_path__ + \"static/media/male-solid.802da44c.svg\";","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport female from '../../../assets/icons/female-solid.svg';\r\nimport male from '../../../assets/icons/male-solid.svg';\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\nimport Sex from \"../../../app/entities/person/Sex\";\r\nimport {PersonViews} from \"../common/PersonViews\";\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    onClick: Function\r\n}\r\n\r\nexport default ({person, onClick}: Props) => {\r\n    return (\r\n        <Row className='my-3 mx-2 border-white border-bottom border-top bg-dark p-2' >\r\n            <Col className='fs-3 hover' onClick={() => onClick(PersonViews.PHONE)}>\r\n                <img className='mr-3' src={person.getSex() === Sex.MALE ? male : female} alt='person' height={35}/><span className='text-primary'>{person.getFirstName()}</span> {person.getLastName()}\r\n            </Col>\r\n            <Col className='text-right align-self-center'>\r\n                <OverlayTrigger placement='left' overlay={<Tooltip id={`tooltip-left`}>Person details</Tooltip>}>\r\n                    <span onClick={(e) => {\r\n                        e.preventDefault();\r\n                        onClick(PersonViews.DETAILS)\r\n                    }} className='go go-more-horiz hover go-2x hover-primary'/>\r\n                </OverlayTrigger>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","enum Class {\r\n    PARENT,\r\n    SIBLING,\r\n    CHILD,\r\n    PIBLING,\r\n    GRANDPARENTS\r\n}\r\n\r\nexport default Class;","import IPersonManager from \"../interfaces/IPersonManager\";\r\nimport IPerson from \"../interfaces/IPerson\";\r\n\r\nclass PersonManager implements IPersonManager {\r\n\r\n    add: Function;\r\n    remove: Function;\r\n    update: Function;\r\n\r\n    constructor(add: Function, remove: Function, update: Function) {\r\n        this.add = add;\r\n        this.remove = remove;\r\n        this.update = update;\r\n    }\r\n\r\n    addPerson(person: IPerson) {\r\n        return this.add(person);\r\n    }\r\n\r\n    removePerson(person: IPerson) {\r\n        return this.remove(person);\r\n    }\r\n\r\n    updatePerson(person: IPerson) {\r\n        return this.update(person);\r\n    }\r\n\r\n}\r\n\r\nexport default PersonManager;","import {useState} from \"react\";\r\nimport CreateNewPerson from \"./personSelection/CreateNewPerson\";\r\nimport PersonListElement from \"./personSelection/PersonListElement\";\r\nimport H1Title from \"./common/H1Title\";\r\nimport IFamTree from \"../../app/interfaces/IFamTree\";\r\nimport IPerson from \"../../app/interfaces/IPerson\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport {PersonViews} from \"./common/PersonViews\";\r\nimport EntitySearch from \"./common/EntitySearch\";\r\nimport IPersonManager from \"../../app/interfaces/IPersonManager\";\r\nimport PersonManager from \"../../app/managers/PersonManager\";\r\n\r\ntype Props = {\r\n    famTree: IFamTree,\r\n    people: IPerson[],\r\n    onBack: Function,\r\n    personManager: IPersonManager,\r\n    loading: boolean,\r\n    children: Function,\r\n}\r\n\r\nexport default ({onBack, famTree, personManager, people, loading, children}:Props) => {\r\n    const [selected, setSelected] = useState<IPerson|null>(null);\r\n    const [view, setView] = useState<PersonViews|null>(null);\r\n\r\n    const newUpdate = (person: IPerson) => {\r\n        personManager.updatePerson(person);\r\n        if (selected && person.getId() === selected.getId())\r\n            setSelected(person);\r\n    }\r\n    const newDelete = (person: IPerson) => {\r\n        personManager.removePerson(person);\r\n        if (selected && person.getId() === selected.getId())\r\n            setSelected(null);\r\n    }\r\n    const modifiedManager = new PersonManager(personManager.addPerson, newDelete, newUpdate);\r\n\r\n\r\n    const Map = (person:IPerson) =>\r\n        <PersonListElement key={person.getId()} onClick={(view: PersonViews) => { setSelected(person); setView(view) }} person={person}/>\r\n\r\n    const filter = (person: IPerson, search:string): boolean =>\r\n        (person.getFirstName() + person.getLastName()).toLowerCase().includes(search.toLowerCase())\r\n\r\n    return (\r\n        <>\r\n            {!selected && <Container>\r\n                <H1Title red={famTree.getName()} caps>\r\n                    <OverlayTrigger placement='left' overlay={<Tooltip id={`tooltip-left`}>Back to menu</Tooltip>}>\r\n                        <span className='text-left go go-back hover hover-primary' onClick={() => onBack()}/>\r\n                    </OverlayTrigger>\r\n                </H1Title>\r\n\r\n                <EntitySearch Map={Map} filter={filter} options={people} loading={loading} emptyList='Looks like no people yet.'/>\r\n\r\n                <CreateNewPerson personManager={personManager} treeId={famTree.getId()}/>\r\n            </Container>}\r\n\r\n            {selected && children(selected, view, () => setSelected(null), modifiedManager)}\r\n        </>\r\n    );\r\n}","import { useState } from 'react';\r\nimport {PersonViews} from './PersonViews';\r\n\r\ntype Props = {\r\n    initView: PersonViews,\r\n    children: Function\r\n};\r\n\r\nexport default ({initView, children}: Props) => {\r\n    const [view, setView] = useState(initView);\r\n    const handleViewChange = (view: PersonViews) => setView(view);\r\n    return children(view, handleViewChange);\r\n}\r\n","import IPerson from \"../interfaces/IPerson\";\r\nimport Person from \"../entities/person/Person\";\r\nimport Swal from 'sweetalert2';\r\n\r\n// const backend = 'https://localhost:44330';\r\nconst backend = '';\r\n\r\n\r\n\r\nexport const Create = async (person: IPerson): Promise<IPerson|null> => {\r\n    const body = {\r\n        firstName: person.getFirstName(),\r\n        lastName: person.getLastName(),\r\n        birthday: person.getBirthday(),\r\n        sex: person.getSex(),\r\n        treeId: person.getTreeId()\r\n    }\r\n    if (person.getDeathDate()) {\r\n        // @ts-ignore\r\n        body.deathDate = person.getDeathDate()\r\n    }\r\n\r\n    const response = await fetch(backend + \"/api/people\", {\r\n        body : JSON.stringify(body),\r\n        method : \"post\",\r\n        headers : {\r\n            'accept': 'text/json',\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    try {\r\n        const data = await response.json();\r\n        if (data.person) {\r\n            const {id, firstName, lastName, birthday, deathDate, treeId, sex} = data.person;\r\n            return new Person(id, firstName, lastName, sex, treeId, birthday, deathDate);\r\n        }\r\n    } catch (e) {}\r\n    Swal.fire({\r\n        title: \"Invalid inputs!\\nPlease try again.\",\r\n        icon: \"error\",\r\n        timer: 2500,\r\n        showCancelButton: false,\r\n        showConfirmButton: false\r\n    })\r\n\r\n    return null;\r\n}\r\n\r\nexport const Delete = async (person: IPerson): Promise<boolean> => {\r\n    const response = await fetch(backend + \"/api/people/\" + person.getId(), {\r\n        method : \"delete\"\r\n    })\r\n    const data = await response.json();\r\n    return data.status === \"Deleted\";\r\n}\r\n\r\nexport const Update = async (person: IPerson): Promise<IPerson|null> => {\r\n    const body = {\r\n        id: person.getId(),\r\n        firstName: person.getFirstName(),\r\n        lastName: person.getLastName(),\r\n        birthday: person.getBirthday(),\r\n        deathDate: person.getDeathDate(),\r\n        treeId: person.getTreeId()\r\n    }\r\n\r\n\r\n    const response = await fetch(backend + \"/api/people\", {\r\n        body : JSON.stringify(body),\r\n        method : \"put\",\r\n        headers : {\r\n            'accept': 'text/json',\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n\r\n    try {\r\n        const data = await response.json();\r\n        if (data.person) {\r\n            const {id, firstName, lastName, birthday, deathDate, treeId, sex} = data.person;\r\n            return new Person(id, firstName, lastName, sex, treeId, birthday, deathDate);\r\n        }\r\n    } catch (e) {}\r\n    Swal.fire({\r\n        title: \"Invalid inputs!\\nPlease try again.\",\r\n        icon: \"error\",\r\n        timer: 2500,\r\n        showCancelButton: false,\r\n        showConfirmButton: false\r\n    })\r\n\r\n    return null;\r\n}\r\n\r\nexport const List = async (treeId: number): Promise<IPerson[]> => {\r\n    const response = await fetch(backend + \"/api/tree-people/\" + treeId)\r\n    const data = await response.json();\r\n\r\n    return data.people.map((p:any) => {\r\n        const {id, firstName, lastName, birthday, deathDate, treeId, sex} = p;\r\n        return new Person(id, firstName, lastName, sex, treeId, birthday, deathDate);\r\n    });\r\n}","type Props = {\r\n    img: string,\r\n    lg?: boolean,\r\n    md?: boolean,\r\n    sm?: boolean,\r\n    center?: boolean,\r\n}\r\n\r\nexport default ({ img, lg, md, sm, center}: Props) => {\r\n    let size = (lg && 'lg') || (md && 'md') || (sm && 'sm')\r\n    if (!size) size = \"sm\";\r\n    const addon = center ? \"profile-center\" : '';\r\n    return (\r\n        <div className={addon + ' border-wrapper-round user-select-none bg-dark profile profile-' + size}>\r\n            <div className='border-wrapper-round bg-primary'>\r\n                <div className='border-wrapper-round bg-dark'>\r\n                    <div className=\"text-center person-profile\">\r\n                        <img src={img} className=\"rounded\" alt=\"...\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import PersonProfile from \"../common/PersonProfile\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport female from \"../../../assets/icons/female-solid.svg\";\r\nimport male from \"../../../assets/icons/male-solid.svg\";\r\nimport {PersonViews} from \"../common/PersonViews\";\r\nimport IFamilyMember from \"../../../app/interfaces/IFamilyMember\";\r\nimport Sex from \"../../../app/entities/person/Sex\";\r\n\r\ntype Props = {\r\n    familyMember: IFamilyMember,\r\n    onViewChange: Function\r\n}\r\n\r\nexport default ({familyMember, onViewChange}: Props) => {\r\n    const person = familyMember.Person\r\n\r\n    let piblings:IFamilyMember[] = []\r\n\r\n    for (const parent of familyMember.parents)\r\n        piblings = [...piblings, ...parent.siblings]\r\n\r\n\r\n    return (\r\n        <div className='bg-light mx-1 text-dark font-weight-bold card card-body mt-5'>\r\n            <div className=''>\r\n                <PersonProfile img={person.getSex() === Sex.MALE ? male : female} center md/>\r\n                <Row>\r\n                    <Col>\r\n                        {!person.isAlive() && <span className='person-dead'/>}\r\n                    </Col>\r\n                    <Col className='text-right'>\r\n                        <span onClick={() => onViewChange(PersonViews.DETAILS)} className='go go-more-vert hover hover-primary go-2x'/>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Col className='lh-1 mb-2 user-select-none'>\r\n                    <Row className='justify-content-center text-primary'>\r\n                        {person.getFirstName()}\r\n                    </Row>\r\n                    <Row className='justify-content-center fs-5 mb-1'>\r\n                        {person.getLastName()}\r\n                    </Row>\r\n                    <Row className='justify-content-center  fs-8 lh-0'>\r\n                        {person.getBirthday()}\r\n                    </Row>\r\n                    <Row className='justify-content-center fs-8 lh-0'>\r\n                        {person.getDeathDate()}\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Row className='justify-content-center user-select-none'>\r\n                            Kids\r\n                        </Row>\r\n                        <Row className='justify-content-center user-select-none'>\r\n                            {familyMember.children.length}\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col className='text-center'>\r\n                        <Row className='justify-content-center user-select-none'>\r\n                            Siblings\r\n                        </Row>\r\n                        <Row className='justify-content-center user-select-none'>\r\n                            {familyMember.siblings.length}\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col className='text-center'>\r\n                        <Row className='justify-content-center user-select-none'>\r\n                            Piblings\r\n                        </Row>\r\n                        <Row className='justify-content-center user-select-none'>\r\n                            {piblings.length}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Col from \"react-bootstrap/Col\";\r\nimport PersonProfile from \"../common/PersonProfile\";\r\nimport female from \"../../../assets/icons/female-solid.svg\";\r\nimport male from \"../../../assets/icons/male-solid.svg\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\nimport Sex from \"../../../app/entities/person/Sex\";\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    tag: string,\r\n    onClick?: Function\r\n}\r\n\r\nexport default ({person, tag, onClick}: Props) => {\r\n    return (\r\n        <Col className='p-1' xs={5} md={4} lg={3}>\r\n            <div className='fs-5 card bg-secondary text-dark font-weight-bold p-2 hover hover-bg-gray-light'>\r\n                <PersonProfile img={person.getSex() === Sex.MALE? male: female} />\r\n                <Row>\r\n                    <Col className='text-right mr-2 text-uppercase'>\r\n                        {tag}\r\n                    </Col>\r\n                </Row>\r\n                <div className='fs-5'>\r\n                    <Row className='text-primary justify-content-center'>\r\n                        {person.getFirstName()}\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        {person.getLastName()}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    )\r\n}","import IPerson from \"../../interfaces/IPerson\";\r\nimport Class from \"./Class\";\r\n\r\nconst definitions: any = {}\r\n\r\ndefinitions[Class.PARENT] = ['dad', 'mom']\r\ndefinitions[Class.CHILD] = ['son', \"daughter\"]\r\ndefinitions[Class.SIBLING] = [\"brother\", \"sister\"]\r\ndefinitions[Class.PIBLING] = [\"uncle\", 'aunt']\r\ndefinitions[Class.GRANDPARENTS] = ['granny', 'grandpa']\r\n\r\nconst MemberClass = (person: IPerson, famClass: Class) => {\r\n    return definitions[famClass][person.getSex()]\r\n}\r\n\r\nexport default MemberClass;","import BlackRedModal from \"./BlackRedModal\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\nimport Sex from \"../../../app/entities/person/Sex\";\r\nimport male from '../../../assets/icons/male-solid.svg';\r\nimport female from '../../../assets/icons/female-solid.svg';\r\nimport EntitySearch from \"./EntitySearch\";\r\nimport IPersonManager from \"../../../app/interfaces/IPersonManager\";\r\nimport IParentManager from \"../../../app/interfaces/IParentManager\";\r\nimport IMemberMap from \"../../../app/interfaces/IMemberMap\";\r\n\r\ntype PersonListElementProps = {\r\n    person: IPerson,\r\n    onClick: Function\r\n}\r\n\r\nconst PersonListElement = ({person, onClick}: PersonListElementProps) => {\r\n    return (\r\n        <Row className='my-3 mx-2 border-white border-bottom border-top hover bg-dark' onClick={() => onClick()}>\r\n            <Container>\r\n                <Row className='p-1'>\r\n                    <Col className='text-primary font-weight-bold' xs={7}>\r\n                        <img className='mr-3' src={person.getSex() === Sex.MALE ? male : female} alt='person' height={20}/>\r\n                        {person.getLastName()}\r\n                    </Col>\r\n                    <Col className='text-right align-self-center'>\r\n                        {person.getFirstName()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Row>\r\n    );\r\n}\r\n\r\ntype Props = {\r\n    familyMembers: IMemberMap,\r\n    personManager: IPersonManager,\r\n    parentManager: IParentManager,\r\n    person: IPerson,\r\n    isParent: boolean,\r\n    doHide: Function,\r\n    show: boolean\r\n    sex?: Sex\r\n}\r\n\r\nexport default ({personManager, parentManager, person, isParent, familyMembers, sex, doHide, show}:Props) => {\r\n\r\n    let options = Object.values(familyMembers).map(f => f.Person)\r\n\r\n\r\n    if (sex !== undefined)\r\n        options = options.filter(p => p.getSex() === sex)\r\n\r\n    if (isParent)\r\n        options = options.filter(p => new Date(p.getBirthday()) > new Date(person.getBirthday()))\r\n    else\r\n        options = options.filter(p => new Date(p.getBirthday()) < new Date(person.getBirthday()))\r\n\r\n\r\n    const handleSelect = (selected: IPerson) =>{\r\n        if (isParent) return parentManager.addParent(selected, person);\r\n        parentManager.addParent(person, selected);\r\n        doHide(false);\r\n    }\r\n\r\n    const handleCreateNew = () => {\r\n\r\n        console.log('Creating new');\r\n    }\r\n\r\n    const Map = (person: IPerson) =>\r\n        <PersonListElement key={person.getId()} person={person} onClick={() => handleSelect(person)}/>\r\n\r\n    const filter = (person: IPerson, search:string): boolean =>\r\n        (person.getFirstName() + person.getLastName()).toLowerCase().includes(search.toLowerCase())\r\n\r\n    return (\r\n        <BlackRedModal show={show} onClose={() => doHide(false)} onSubmit={handleCreateNew}>\r\n            <EntitySearch options={options} filter={filter} Map={Map}/>\r\n        </BlackRedModal>\r\n    );\r\n}","import Col from \"react-bootstrap/Col\";\r\nimport PersonProfile from \"../common/PersonProfile\";\r\nimport female from \"../../../assets/icons/female-solid.svg\";\r\nimport male from \"../../../assets/icons/male-solid.svg\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\nimport Sex from \"../../../app/entities/person/Sex\";\r\nimport AddPerson from \"../common/AddPerson\";\r\nimport IParentManager from \"../../../app/interfaces/IParentManager\";\r\nimport IPersonManager from \"../../../app/interfaces/IPersonManager\";\r\nimport {useState} from \"react\";\r\nimport IMemberMap from \"../../../app/interfaces/IMemberMap\";\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    tag: string,\r\n    sex?: Sex,\r\n    isParent: boolean,\r\n    personManager: IPersonManager,\r\n    parentManager: IParentManager,\r\n    familyMembers: IMemberMap,\r\n}\r\n\r\nexport default ({person, isParent, tag, sex, personManager, parentManager, familyMembers}: Props) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Col className='p-1' xs={5} md={4} lg={3} onClick={() => setShow(true)}>\r\n                <div className='fs-5 card bg-secondary text-dark font-weight-bold p-2 hover hover-bg-gray-light'>\r\n                    {sex !== undefined && <PersonProfile img={sex === Sex.MALE ? male : female}/>}\r\n                    <Row>\r\n                        <Col className='text-right mr-2 text-uppercase'>\r\n                            {tag}\r\n                        </Col>\r\n                    </Row>\r\n                    <span className='go go-add go-2x text-center'/>\r\n                </div>\r\n            </Col>\r\n\r\n            <AddPerson sex={sex}\r\n                        familyMembers={familyMembers}\r\n                       show={show}\r\n                        doHide={() => setShow(false)}\r\n                        person={person}\r\n                        isParent={isParent}\r\n                        personManager={personManager}\r\n                        parentManager={parentManager}/>\r\n        </>\r\n\r\n    );\r\n}","import Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\n\r\nimport MainCard from \"./graphPhone/MainCard\";\r\nimport RelativeCard from \"./graphPhone/RelativeCard\";\r\nimport IPerson from \"../../app/interfaces/IPerson\";\r\nimport IMemberMap from \"../../app/interfaces/IMemberMap\";\r\nimport MemberClass from \"../../app/entities/famtree/MemberClass\";\r\nimport Class from \"../../app/entities/famtree/Class\";\r\nimport Sex from \"../../app/entities/person/Sex\";\r\nimport AddRelative from \"./graphPhone/AddRelative\";\r\nimport IParentManager from \"../../app/interfaces/IParentManager\";\r\nimport IPersonManager from \"../../app/interfaces/IPersonManager\";\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    onViewChange: Function,\r\n    familyMembers: IMemberMap,\r\n    parentManager: IParentManager\r\n    personManager: IPersonManager\r\n};\r\n\r\nexport default ({ person, onViewChange, familyMembers, parentManager, personManager}: Props) => {\r\n    // const [breadcrumb, setBreadcrumb] = useState<IPerson[]>([])\r\n    // Todo: Add breadcrumb\r\n    const familyMember = familyMembers[person.getId()];\r\n\r\n    var mom;\r\n    var dad;\r\n    const parents = familyMember.parents\r\n    for (const parent of parents) {\r\n        if (parent.Person.getSex() === Sex.MALE) dad = parent;\r\n        else mom = parent\r\n    }\r\n\r\n    const siblings = familyMember.siblings\r\n    const children = familyMember.children\r\n\r\n    console.log(\"Relatives\", siblings, children)\r\n\r\n    // Todo: Piblings add\r\n    return (<Container>\r\n        <Row className='profile-modal-lg scrollable'>\r\n\r\n            {!!dad && <RelativeCard person={dad.Person} tag={MemberClass(dad.Person, Class.PARENT)}/>}\r\n            {!dad && <AddRelative familyMembers={familyMembers} personManager={personManager} parentManager={parentManager} person={person} isParent={false} tag={'dad'} sex={Sex.MALE}/>}\r\n\r\n            {!!mom && <RelativeCard person={mom.Person} tag={MemberClass(mom.Person, Class.PARENT)}/>}\r\n            {!mom && <AddRelative familyMembers={familyMembers} personManager={personManager} parentManager={parentManager} person={person} isParent={false} tag={'mom'} sex={Sex.FEMALE}/>}\r\n\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col>\r\n                <Swiper\r\n                    spaceBetween={50}\r\n                    slidesPerView={1}\r\n                >\r\n                    <SwiperSlide>\r\n                        <MainCard onViewChange={onViewChange} familyMember={familyMember} />\r\n                    </SwiperSlide>\r\n\r\n                    {siblings.map(f => <SwiperSlide key={f.Person.getId()}>\r\n                        <MainCard onViewChange={onViewChange} familyMember={f} />\r\n                    </SwiperSlide>)}\r\n\r\n                </Swiper>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row className='profile-modal-md scrollable'>\r\n            { children.map(f => <RelativeCard key={f.Person.getId()} person={f.Person} tag={MemberClass(f.Person, Class.CHILD)}/>) }\r\n            <AddRelative familyMembers={familyMembers} personManager={personManager} parentManager={parentManager} person={person} isParent={true} tag={'child'}/>\r\n            {/*<RelativeCard tag={'child'}/>*/}\r\n        </Row>\r\n\r\n    </Container>);\r\n}","import Card from \"react-bootstrap/Card\";\r\nimport PersonProfile from \"../common/PersonProfile\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\nimport {PersonViews} from \"../common/PersonViews\";\r\nimport Sex from \"../../../app/entities/person/Sex\";\r\n\r\nimport male from \"../../../assets/icons/male-solid.svg\";\r\nimport female from \"../../../assets/icons/female-solid.svg\";\r\n\r\ntype DataRowProps = {\r\n    label: string,\r\n    value: string\r\n}\r\n\r\nconst DataRow = ({label, value}: DataRowProps) => {\r\n    return (\r\n        <Row>\r\n            <Col className='bold text-gray text-right'>\r\n                {label}\r\n            </Col>\r\n            <Col className='text-dark'>\r\n                {value}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    onEdit: Function,\r\n    onViewChange: Function,\r\n    onBack: Function\r\n}\r\n\r\nexport default ({person, onEdit, onViewChange, onBack}: Props) => {\r\n    return (\r\n        <Card className='profile-modal-lg'>\r\n            <Card.Body className='font-weight-bold'>\r\n\r\n                <PersonProfile img={person.getSex() === Sex.MALE ? male : female} lg center/>\r\n\r\n                <Row className='mb-3'>\r\n                    <Col className='text-dark'>\r\n                        {!person.isAlive() && <span className='person-dead'/>}\r\n                    </Col>\r\n                    <Col className='text-dark mr-3'>\r\n                        <Row>\r\n                            <span onClick={() => onBack()} className='go go-back go-2x hover hover-primary ml-auto'/>\r\n                        </Row>\r\n                        <Row>\r\n                            <span onClick={() => onEdit()} className='go go-edit go-2x hover hover-primary ml-auto'/>\r\n                        </Row>\r\n                        <Row className='mt-1'>\r\n                            <span onClick={() => onViewChange(PersonViews.PHONE)} className='go go-graph go-2x hover hover-primary ml-auto'/>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <DataRow label='First Name:' value={person.getFirstName()}/>\r\n                <DataRow label='Last Name:' value={person.getLastName()}/>\r\n                <DataRow label='Birthday:' value={person.getBirthday()}/>\r\n                {!person.isAlive() && <DataRow label='Death Date:' value={person.getDeathDate()}/>}\r\n\r\n                {/*<DataRow label='Sex:' value={person.getSex().ToString()}/>*/}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import Card from \"react-bootstrap/Card\";\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\n\r\ntype Props = {\r\n    onClick?: Function,\r\n    person: IPerson,\r\n}\r\n\r\nexport default ({person, onClick = () => {}}: Props) => {\r\n    return (\r\n        <Card className='my-2 hover' onClick={() => onClick()}>\r\n            {!person.isAlive() && <span className='person-dead-sm'/>}\r\n            <div className='fs-4 text-center text-primary font-weight-bold m-1'>{person.getFirstName()}<span className='text-dark'>{person.getLastName()}</span></div>\r\n        </Card>\r\n    )\r\n}","type Props = {\r\n    title: string,\r\n    caps?: boolean\r\n}\r\n\r\nexport default ({title, caps = true}: Props) => {\r\n    return (\r\n        <h3 className={'text-center mt-3 font-weight-bold' + (caps? ' text-uppercase': '')}><span className='text-primary'>{title}</span></h3>\r\n    )\r\n}","import Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\n\r\ntype Props = {\r\n    onClick?: Function,\r\n    person: IPerson,\r\n    tag: string\r\n}\r\n\r\nexport default ({person, tag, onClick=()=>{}}: Props) => {\r\n    return (\r\n        <Card className='my-2 hover' onClick={() => onClick()}>\r\n            {!person.isAlive() && <span className='person-dead-sm'/>}\r\n            <Row className='m-1'>\r\n                <Col className='text-center'>\r\n                    <span className='fs-4 text-primary font-weight-bold '>{person.getFirstName()}<span className='text-dark'>{person.getLastName()}</span></span>\r\n                </Col>\r\n                <Col className='text-right align-self-center'>\r\n                    <span className='font-weight-bold text-dark'>{tag}</span>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n}","import Container from \"react-bootstrap/Container\";\r\nimport PersonDetailsCard from \"./personDetails/PersonDetailsCard\";\r\nimport PersonSpouse from \"./personDetails/PersonSpouse\";\r\nimport GroupTitle from \"./personDetails/GroupTitle\";\r\nimport PersonRelativeCard from \"./personDetails/PersonRelativeCard\";\r\nimport IPerson from \"../../app/interfaces/IPerson\";\r\nimport IMemberMap from \"../../app/interfaces/IMemberMap\";\r\nimport IParentManager from \"../../app/interfaces/IParentManager\";\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    onEdit: Function,\r\n    onBack: Function,\r\n    onViewChange: Function,\r\n    familyMembers: IMemberMap,\r\n    parentManager: IParentManager\r\n};\r\n\r\nexport default ({person, onEdit, onViewChange, onBack, familyMembers}: Props) => {\r\n\r\n    const spouses = familyMembers[person.getId()].spouses;\r\n    const kids = familyMembers[person.getId()].children;\r\n    const parents = familyMembers[person.getId()].parents;\r\n\r\n    return (\r\n        <Container>\r\n            <PersonDetailsCard onBack={onBack} person={person} onEdit={onEdit} onViewChange={onViewChange}/>\r\n\r\n            { spouses.length > 0 && <GroupTitle title={'Spouse' + (spouses.length > 1? 's':'')}/>}\r\n            { spouses.map(s => <PersonSpouse key={s.Person.getId()} person={s.Person}/>) }\r\n\r\n            { kids.length > 0 && <GroupTitle title={'Kid' + (spouses.length > 1? 's':'')}/>}\r\n            { kids.map(s => <PersonRelativeCard key={s.Person.getId()} person={s.Person} tag='Daughter'/>) }\r\n\r\n            <GroupTitle title='Relatives' />\r\n            { parents.map(s => <PersonRelativeCard key={s.Person.getId()} person={s.Person} tag='Mom'/>) }\r\n\r\n        </Container>\r\n    );\r\n}","import Card from \"react-bootstrap/Card\";\r\nimport PersonProfile from \"../common/PersonProfile\";\r\nimport female from \"../../../assets/icons/female-solid.svg\";\r\nimport male from \"../../../assets/icons/male-solid.svg\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {useState} from \"react\";\r\nimport IPerson from \"../../../app/interfaces/IPerson\";\r\nimport Sex from \"../../../app/entities/person/Sex\";\r\nimport FlyButton from \"../common/FlyButton\";\r\nimport Person from \"../../../app/entities/person/Person\";\r\nimport IPersonManager from \"../../../app/interfaces/IPersonManager\";\r\n\r\ntype DataInsertProps = {\r\n    label: string,\r\n    value: string,\r\n    onChange: Function,\r\n    placeholder?: string,\r\n    type?:string\r\n};\r\n\r\nconst DataInsert = ({label, value, onChange, placeholder, type}: DataInsertProps) => {\r\n    return (\r\n        <Form.Group as={Row} className='mb-1'>\r\n            <Form.Label column sm=\"4\" className='bold text-gray text-right'>\r\n                {label}\r\n            </Form.Label>\r\n            <Col sm=\"8\">\r\n                <Form.Control className='text-dark font-weight-bold' value={value} onChange={(e) => onChange(e.target.value)} type={type} placeholder={placeholder} />\r\n            </Col>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    onClose: Function,\r\n    personManager: IPersonManager,\r\n};\r\n\r\nexport default ({person, onClose, personManager}: Props) => {\r\n\r\n    const [firstName, setFirstName] = useState(person.getFirstName())\r\n    const [lastName, setLastName] = useState(person.getLastName())\r\n    const [birthday, setBirthday] = useState(person.getBirthday())\r\n    const [deathDate, setDeathDate] = useState(!person.isAlive() ? person.getDeathDate(): '')\r\n    const [sex, setSex] = useState(person.getSex())\r\n\r\n    const handleFirstName = (value:any) => setFirstName(value);\r\n    const handleLastName = (value:any) => setLastName(value);\r\n    const handleBirthday = (value:any) => setBirthday(value);\r\n    const handleDeathDate = (value:any) => setDeathDate(value);\r\n    const handleSex = (value:any) => setSex(value);\r\n\r\n    const handleSubmit = () => {\r\n        const updated = new Person(person.getId(), firstName, lastName, 0, person.getTreeId(), birthday, deathDate);\r\n        personManager.updatePerson(updated)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card className='profile-modal-lg'>\r\n                <Card.Body className='font-weight-bold'>\r\n\r\n                    <PersonProfile img={(sex === Sex.MALE) ? male: female} lg center/>\r\n\r\n                    <Row className='mb-5'>\r\n                        <Col className='text-dark'>\r\n                            <Row>\r\n                                <span className='go go-trash go-2x hover hover-primary ml-3' onClick={() => personManager.removePerson(person)}/>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className='text-dark mr-3 mb-4'>\r\n                            <Row>\r\n                                <span className='go go-close go-2x hover hover-primary ml-auto' onClick={() => onClose()}/>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <DataInsert value={firstName} onChange={handleFirstName} label='First Name:' placeholder='First Name...'/>\r\n                    <DataInsert value={lastName} onChange={handleLastName} label=\"Last Name:\" placeholder='Last Name...'/>\r\n                    <DataInsert value={birthday} onChange={handleBirthday} label='Birthday:' placeholder='Select...' type='date'/>\r\n                    <DataInsert value={deathDate} onChange={handleDeathDate} label='Death date:' placeholder='Select...' type='date'/>\r\n                    {/*<DataInsert value={sex} onChange={handleSex} label='Sex:' placeholder='Sex...' />*/}\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <FlyButton onClick={handleSubmit} icon='go-check'/>\r\n        </>\r\n    );\r\n}","import Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\ntype Props = {\r\n    onClick?: Function,\r\n    label: string\r\n}\r\n\r\nexport default ({label, onClick = ()=>{}}: Props) => {\r\n    return (\r\n        <Card className='bg-secondary p-2 hover hover-bg-gray' onClick={() => onClick()}>\r\n            <Row className='fs-4 align-self-center'>\r\n                <span className='font-weight-bold text-uppercase text-primary text-center'>{label}</span>\r\n                <span className='ml-2 go go-person-add text-dark fs-1'/>\r\n            </Row>\r\n        </Card>\r\n    );\r\n}","import Container from \"react-bootstrap/Container\";\r\nimport PersonEditDetailsCard from \"./personEdit/PersonEditDetailsCard\";\r\nimport PersonSpouse from \"./personDetails/PersonSpouse\";\r\nimport GroupTitle from \"./personDetails/GroupTitle\";\r\nimport PersonRelativeCard from \"./personDetails/PersonRelativeCard\";\r\nimport PersonAddRelative from \"./personEdit/PersonAddRelative\";\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport IPerson from \"../../app/interfaces/IPerson\";\r\nimport IPersonManager from \"../../app/interfaces/IPersonManager\";\r\nimport IMemberMap from \"../../app/interfaces/IMemberMap\";\r\nimport MemberClass from \"../../app/entities/famtree/MemberClass\";\r\nimport Class from \"../../app/entities/famtree/Class\";\r\nimport IParentManager from \"../../app/interfaces/IParentManager\";\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    onCancelEdit: Function,\r\n    personManager: IPersonManager,\r\n    familyMembers: IMemberMap,\r\n    parentManager: IParentManager\r\n};\r\n\r\nexport default ({person, onCancelEdit, personManager, familyMembers}: Props) => {\r\n\r\n    const kids = familyMembers[person.getId()].children;\r\n    const parents = familyMembers[person.getId()].parents;\r\n\r\n    return (\r\n        <Container>\r\n            <PersonEditDetailsCard personManager={personManager} person={person} onClose={onCancelEdit}/>\r\n\r\n            <GroupTitle title='Parents'/>\r\n            { parents.map(f => <PersonSpouse person={f.Person} />) }\r\n\r\n            <PersonAddRelative label='dad'/>\r\n\r\n            <GroupTitle title='Kids'/>\r\n            <Row>\r\n                {kids.map(f =>\r\n                    <Col className='m-0' sm={6} md={4} xl={3}>\r\n                        <PersonRelativeCard person={f.Person} tag={MemberClass(f.Person, Class.CHILD)}/>\r\n                    </Col>)}\r\n\r\n                <Col className='m-1' sm={6} md={4} xl={3}>\r\n                    <PersonAddRelative label='Add kid'/>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}","import {useState} from \"react\";\r\nimport PersonDetails from \"./pages/PersonDetails\";\r\nimport PersonEdit from \"./pages/PersonEdit\";\r\nimport IPerson from \"../app/interfaces/IPerson\";\r\nimport IPersonManager from \"../app/interfaces/IPersonManager\";\r\nimport PersonManager from \"../app/managers/PersonManager\";\r\nimport IMemberMap from \"../app/interfaces/IMemberMap\";\r\nimport IParentManager from \"../app/interfaces/IParentManager\";\r\n\r\ntype Props = {\r\n    person: IPerson,\r\n    onViewChange: Function,\r\n    onBack: Function,\r\n    personManager: IPersonManager,\r\n    parentManager: IParentManager\r\n    familyMembers: IMemberMap,\r\n};\r\n\r\nexport default ({person, onViewChange, onBack, personManager, familyMembers, parentManager}: Props) => {\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    const handleEdit = () => setEdit(true);\r\n    const handleCancelEdit = () => setEdit(false);\r\n\r\n    const handlePersonUpdate = (person:IPerson) => {\r\n        personManager.updatePerson(person);\r\n        handleCancelEdit();\r\n    }\r\n\r\n    const modifiedManager = new PersonManager(personManager.addPerson,(person: IPerson) => personManager.removePerson(person), handlePersonUpdate)\r\n\r\n    return (\r\n        <>\r\n            {!edit && <PersonDetails\r\n                parentManager={parentManager}\r\n                familyMembers={familyMembers}\r\n                onBack={onBack}\r\n                person={person}\r\n                onEdit={handleEdit}\r\n                onViewChange={onViewChange}/>}\r\n\r\n            {edit && <PersonEdit\r\n                parentManager={parentManager}\r\n                familyMembers={familyMembers}\r\n                personManager={modifiedManager}\r\n                person={person}\r\n                onCancelEdit={handleCancelEdit}/>}\r\n        </>\r\n    );\r\n}","import IFamilyMember from \"../../interfaces/IFamilyMember\";\r\nimport IPerson from \"../../interfaces/IPerson\";\r\n\r\nclass FamilyMember implements IFamilyMember {\r\n\r\n    Person: IPerson;\r\n\r\n    constructor(person: IPerson) {\r\n        this.Person = person\r\n\r\n        this.children = []\r\n        this.parents = []\r\n        this.siblings = []\r\n        this.spouses = []\r\n    }\r\n\r\n    children: IFamilyMember[];\r\n    parents: IFamilyMember[];\r\n    siblings: IFamilyMember[];\r\n    spouses: IFamilyMember[];\r\n}\r\nexport default FamilyMember;","import IParentMap from \"../interfaces/IParentMap\";\r\nimport IPerson from \"../interfaces/IPerson\";\r\nimport FamilyMember from \"../entities/famtree/FamilyMember\";\r\nimport IMemberMap from \"../interfaces/IMemberMap\";\r\n\r\n\r\nclass FamilyBuilder {\r\n\r\n    parentMap: {[id:number]: number[]};\r\n    people: { [id:number]: IPerson };\r\n\r\n    constructor(parentMap: IParentMap, people: { [id:number]: IPerson }) {\r\n        this.parentMap = parentMap;\r\n        this.people = people;\r\n    }\r\n\r\n    build(): IMemberMap {\r\n        const members: IMemberMap = {}\r\n\r\n        for (const person of Object.values(this.people)) {\r\n            const id = person.getId()\r\n            if (!(id in members))\r\n                members[id] = new FamilyMember(person)\r\n\r\n            if (person.getId() in this.parentMap) {\r\n                const child = members[id]\r\n                const parents = this.parentMap[id]\r\n                const n = this.parentMap[id].length\r\n\r\n                for (let i = 0; i < n; i++) {\r\n                    const keyP = parents[i];\r\n                    this.addToMap(keyP, members);\r\n\r\n                    for (const member of members[keyP].children) {\r\n                        member.siblings.push(child)\r\n                        child.siblings.push(member)\r\n                    }\r\n\r\n                    child.parents.push(members[keyP])\r\n                    members[keyP].children.push(child)\r\n\r\n                    if (n === 2 && i === 1) {\r\n                        members[parents[0]].spouses.push(members[parents[1]])\r\n                        members[parents[1]].spouses.push(members[parents[0]])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return members\r\n    }\r\n\r\n    addToMap(key:number, members:IMemberMap) {\r\n        if (!(key in members))\r\n            members[key] = new FamilyMember(this.people[key])\r\n    }\r\n}\r\n\r\nexport default FamilyBuilder;","import React, {Component} from 'react';\r\nimport PersonSelection from \"./pages/PersonSelection\";\r\nimport IPerson from \"../app/interfaces/IPerson\";\r\nimport IFamTree from \"../app/interfaces/IFamTree\";\r\nimport PersonViewSwitch from \"./pages/common/PersonViewSwitch\";\r\nimport {Create, Delete, List, Update} from \"../app/endpoints/PersonEndpoints\";\r\nimport { PersonViews } from \"./pages/common/PersonViews\";\r\nimport GraphPhone from \"./pages/GraphPhone\";\r\nimport PersonDetailsController from \"./PersonDetailsController\";\r\nimport IParentMap from \"../app/interfaces/IParentMap\";\r\nimport PersonManager from \"../app/managers/PersonManager\";\r\nimport IPersonManager from \"../app/interfaces/IPersonManager\";\r\nimport FamilyBuilder from \"../app/services/FamilyBuilder\";\r\nimport IParentManager from \"../app/interfaces/IParentManager\";\r\nimport IMemberMap from \"../app/interfaces/IMemberMap\";\r\n\r\ntype Props = {\r\n    tree: IFamTree,\r\n    onBack: Function,\r\n    parents: IParentMap\r\n    parentManager: IParentManager\r\n};\r\n\r\ntype State = {\r\n    people: IPerson[],\r\n    loading: boolean,\r\n    familyMembers: IMemberMap\r\n};\r\n\r\nconst mapper = (people: IPerson[]): {[id:number]: IPerson} => {\r\n    const data:{[id:number]: IPerson} = {}\r\n\r\n    for (const person of people)\r\n        data[person.getId()] = person;\r\n    return data;\r\n}\r\n\r\nclass PersonController extends Component<Props, State> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            people: [],\r\n            loading: true,\r\n            familyMembers: new FamilyBuilder(this.props.parents, mapper([])).build()\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const people = await List(this.props.tree!.getId())\r\n        const familyMembers = new FamilyBuilder(this.props.parents, mapper(people)).build()\r\n        this.setState({people, loading: false, familyMembers })\r\n    }\r\n\r\n    handleDeletePerson = async (person: IPerson) => {\r\n        if (await Delete(person)) {\r\n            const people = this.state.people.filter(p => p.getId() !== person.getId())\r\n            const familyMembers = new FamilyBuilder(this.props.parents, mapper(people)).build()\r\n            this.setState({people, familyMembers})\r\n        }\r\n    }\r\n    handleCreatePerson = async (person: IPerson) => {\r\n        const newPerson = await Create(person);\r\n        if (newPerson) {\r\n            const people = [...this.state.people, newPerson]\r\n            const familyMembers = new FamilyBuilder(this.props.parents, mapper(people)).build()\r\n            this.setState({people, familyMembers})\r\n        }\r\n    }\r\n    handleEditPerson = async (person: IPerson) => {\r\n        const updatePerson = await Update(person);\r\n        if (updatePerson) {\r\n            let people = this.state.people.filter(p => p.getId() !== person.getId())\r\n            people = [...people, updatePerson]\r\n            const familyMembers = new FamilyBuilder(this.props.parents, mapper(people)).build()\r\n            this.setState({people, familyMembers})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { people, loading, familyMembers } = this.state;\r\n        const {  tree, onBack, parentManager } = this.props;\r\n\r\n        const personManager = new PersonManager(this.handleCreatePerson, this.handleDeletePerson, this.handleEditPerson)\r\n\r\n        return (\r\n            <PersonSelection onBack={onBack} famTree={tree} people={people} personManager={personManager} loading={loading}>\r\n                {(person: IPerson, initView: PersonViews, onDeselect:Function, modifiedManager: IPersonManager) =>\r\n                    <PersonViewSwitch initView={initView}>\r\n                        {(view: PersonViews, handleViewChange: Function) => {\r\n                            return (<>\r\n                                { view === PersonViews.PHONE && <GraphPhone\r\n                                    personManager={modifiedManager}\r\n                                    parentManager={parentManager}\r\n                                    familyMembers={familyMembers}\r\n                                    onViewChange={handleViewChange}\r\n                                    person={person} />}\r\n                                { view === PersonViews.DETAILS && <PersonDetailsController\r\n                                    parentManager={parentManager}\r\n                                    familyMembers={familyMembers}\r\n                                    personManager={modifiedManager}\r\n                                    onBack={onDeselect}\r\n                                    person={person}\r\n                                    onViewChange={handleViewChange}/>}\r\n                                {/*{ view === Views.DESKTOP && <GraphPhone/>}*/}\r\n                            </>)\r\n                        }}\r\n                    </PersonViewSwitch>\r\n                }\r\n            </PersonSelection>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonController;","import IFamTree from \"../interfaces/IFamTree\";\r\nimport FamTree from \"../entities/famtree/FamTree\";\r\n\r\n// const backend = 'https://localhost:44330';\r\nconst backend = '';\r\n\r\nexport const Create = async (tree: IFamTree) => {\r\n    const response = await fetch(backend + \"/api/trees\", {\r\n        body : JSON.stringify({ name: tree.getName() }),\r\n        method : \"post\",\r\n        headers : {\r\n            'accept': 'text/json',\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    const data = await response.json();\r\n    return new FamTree(data.tree.id, data.tree.name)\r\n}\r\n\r\nexport const Delete = async (tree: IFamTree): Promise<boolean> => {\r\n    const response = await fetch(backend + \"/api/trees/\" + tree.getId(), {\r\n        method : \"delete\"\r\n    })\r\n    const data = await response.json();\r\n    return data.status === \"Deleted\";\r\n}\r\n\r\nexport const Update = async (tree: IFamTree) => {\r\n    const response = await fetch(backend + \"/api/trees\", {\r\n        body : JSON.stringify({ id: tree.getId(), name: tree.getName() }),\r\n        method : \"post\",\r\n        headers : {\r\n            'accept': 'text/json',\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    const data = await response.json();\r\n    return new FamTree(data.tree.id, data.tree.name)\r\n}\r\n\r\nexport const List = async (): Promise<IFamTree[]> => {\r\n    const response = await fetch(backend + \"/api/trees\")\r\n    const data = await response.json();\r\n    return data.trees.map((t:any) => new FamTree(t.id, t.name));\r\n}","import IPerson from \"../interfaces/IPerson\";\r\nimport IFamTree from \"../interfaces/IFamTree\";\r\nimport IPersonParent from \"../interfaces/IPersonParent\";\r\n\r\n// const backend = 'https://localhost:44330';\r\nconst backend = '';\r\n\r\nexport const Create = async (person: IPerson, parent: IPerson) => {\r\n    const body = {\r\n        personId: person.getId(),\r\n        parentId: parent.getId(),\r\n    }\r\n    const response = await fetch(backend + \"/api/person-parents\", {\r\n        body : JSON.stringify(body),\r\n        method : \"post\",\r\n        headers : {\r\n            'accept': 'text/json',\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n\r\n    const data = await response.json();\r\n    return data.status === \"Added\";\r\n}\r\n\r\nexport const Delete = async (person: IPerson, parent: IPerson): Promise<boolean> => {\r\n    const body = {\r\n        personId: person.getId(),\r\n        parentId: parent.getId(),\r\n    }\r\n    const response = await fetch(backend + \"/api/person-parent\", {\r\n        body : JSON.stringify(body),\r\n        method : \"delete\",\r\n        headers : {\r\n            'accept': 'text/json',\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    const data = await response.json();\r\n    return data.status === \"Removed\";\r\n}\r\n\r\nexport const ListPersonParents = async (person: IPerson, parent: IPerson): Promise<number[]> => {\r\n\r\n    const response = await fetch(backend + \"/api/person-parent/\" + person.getId(), {\r\n        method : \"get\"\r\n    })\r\n    try {\r\n        const data = await response.json();\r\n        if (data.parents)\r\n            return data.parents\r\n    } catch (e) {\r\n        console.log('Person not found!')\r\n    }\r\n    return []\r\n}\r\n\r\nexport const ListTreeParents = async (tree: IFamTree): Promise<IPersonParent[]> => {\r\n    const response = await fetch(backend + \"/api/tree-parents/\" + tree.getId(), {\r\n        method : \"get\"\r\n    })\r\n    try {\r\n        const data = await response.json();\r\n        if (data.personParents)\r\n            return data.personParents\r\n    } catch (e) {\r\n        console.log('Person not found!')\r\n    }\r\n    return []\r\n}\r\n","import IPerson from \"../interfaces/IPerson\";\r\nimport IParentManager from \"../interfaces/IParentManager\";\r\n\r\nclass ParentManager implements IParentManager {\r\n\r\n    add: Function;\r\n    remove: Function;\r\n\r\n    constructor(add: Function, remove: Function) {\r\n        this.add = add;\r\n        this.remove = remove;\r\n    }\r\n\r\n    addParent(child: IPerson, parent: IPerson) {\r\n        this.add(child, parent);\r\n    }\r\n\r\n    removeParent(child: IPerson, parent: IPerson) {\r\n        this.remove(child, parent);\r\n    }\r\n}\r\n\r\nexport default ParentManager","import {Component} from 'react';\r\nimport { Create, Delete, ListTreeParents } from \"../app/endpoints/PersonParentEndpoints\";\r\nimport IFamTree from \"../app/interfaces/IFamTree\";\r\nimport IPerson from \"../app/interfaces/IPerson\";\r\nimport IParentMap from \"../app/interfaces/IParentMap\";\r\nimport ParentManager from \"../app/managers/ParentManager\";\r\n\r\ntype State = {\r\n    parents: IParentMap,\r\n}\r\n\r\ntype Props = {\r\n    tree: IFamTree,\r\n    children: Function\r\n}\r\n\r\nclass ParentController extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            parents: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { parents } = this.state;\r\n\r\n        const items = await ListTreeParents(this.props.tree);\r\n\r\n        console.log(\"ParentController\", items)\r\n        const keyData: IParentMap = {}\r\n        for (const item of items) {\r\n            const {personId, parentId} = item\r\n            if (personId in keyData)\r\n                keyData[personId].push(parentId)\r\n            else\r\n                keyData[personId] = [parentId, ]\r\n        }\r\n\r\n        console.log(\"ParentController\", keyData)\r\n        this.setState({parents: keyData})\r\n    }\r\n\r\n    addParent = async (person: IPerson, parent: IPerson) => {\r\n        console.log(\"ParentController\", person, parent)\r\n\r\n        if (await Create(person, parent)) {\r\n            if (person.getId() in this.state.parents)\r\n                this.state.parents[person.getId()].push(parent.getId());\r\n            else\r\n                this.state.parents[person.getId()] = [parent.getId(), ]\r\n        }\r\n    }\r\n\r\n    removeParent = async (person: IPerson, parent: IPerson) => {\r\n        if (await Delete(person, parent)) {\r\n            if (person.getId() in this.state.parents)\r\n                this.state.parents[person.getId()].push(parent.getId());\r\n            else\r\n                this.state.parents[person.getId()] = [parent.getId(), ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { parents } = this.state;\r\n\r\n        const parentManager = new ParentManager(this.addParent, this.removeParent);\r\n\r\n        // @ts-ignore\r\n        return children(parents, parentManager);\r\n    }\r\n}\r\n\r\nexport default ParentController;","import IFamTree from \"../app/interfaces/IFamTree\";\r\nimport React, {Component} from \"react\";\r\nimport TreeSelection from \"./pages/TreeSelection\";\r\nimport PersonController from \"./PersonController\";\r\nimport { Create, Delete, List } from \"../app/endpoints/TreeEndpoints\";\r\nimport ParentController from \"./ParentController\";\r\nimport IParentMap from \"../app/interfaces/IParentMap\";\r\nimport IParentManager from \"../app/interfaces/IParentManager\";\r\n\r\ntype State = {\r\n    trees: IFamTree[]\r\n    loading: boolean\r\n};\r\n\r\ntype Props = {\r\n};\r\n\r\nclass TreeController extends Component<Props, State>{\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            trees: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({trees: await List(), loading: false})\r\n    }\r\n\r\n    handleDeleteTree = async (tree: IFamTree) => {\r\n        if (await Delete(tree)) {\r\n            const trees = this.state.trees.filter(t => t.getId() !== tree.getId())\r\n            this.setState({trees})\r\n        }\r\n    }\r\n    handleCreateTree = async (tree: IFamTree) => {\r\n        const newTree = await Create(tree);\r\n\r\n        if (newTree) {\r\n            const trees = [...this.state.trees, newTree]\r\n            this.setState({trees})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { trees, loading } = this.state;\r\n\r\n        return (\r\n            <TreeSelection trees={trees} doNewTree={this.handleCreateTree} loading={loading}>\r\n                {(tree: IFamTree, onDeSelect: Function) =>\r\n                    <ParentController tree={tree}>\r\n                        {(parents: IParentMap, parentManager: IParentManager) =>\r\n                            <PersonController\r\n                                parentManager={parentManager}\r\n                                parents={parents}\r\n                                onBack={onDeSelect}\r\n                                tree={tree}/>\r\n                        }\r\n                    </ParentController>\r\n                }\r\n            </TreeSelection>\r\n        );\r\n    }\r\n}\r\nexport default TreeController;","import React from 'react';\r\nimport TreeController from \"./TreeController\";\r\n\r\n\r\nexport default () => {\r\n    return (\r\n        <TreeController/>\r\n    )\r\n}","type Mouse = {x: null|number, y:null|number, radius:number};\r\n\r\n\r\nclass ParticleAnimation {\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D | null;\r\n    particles: Particle[];\r\n    mouse: Mouse;\r\n    keepRadius: number;\r\n    // @ts-ignore\r\n    particlesCount: number;\r\n    particleColor: string;\r\n\r\n    constructor(canvas: HTMLCanvasElement, color: string = '#fff', radius: number = 80) {\r\n        this.canvas = canvas;\r\n        this.particleColor = color;\r\n\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.particles = [];\r\n        this.keepRadius = radius;\r\n\r\n        this.mouse = {\r\n            x: null,\r\n            y: null,\r\n            radius: (this.canvas.height/this.keepRadius) * (this.canvas.width/this.keepRadius)\r\n        }\r\n\r\n        this.setCanvasSize()\r\n\r\n        window.addEventListener(\"mousemove\",  event => {\r\n            this.mouse.x = event.x;\r\n            this.mouse.y = event.y;\r\n        });\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.setCanvasSize()\r\n            this.build()\r\n        })\r\n        window.addEventListener('mouseout', () => {\r\n            this.mouse.x = null;\r\n            this.mouse.y = null;\r\n        })\r\n    }\r\n\r\n    setCanvasSize() {\r\n        this.canvas.width = window.innerWidth\r\n        this.canvas.height = window.innerHeight\r\n        this.particlesCount = (this.canvas.height * this.canvas.width) / 9000;\r\n        this.particlesCount = Math.min(120, this.particlesCount)\r\n        this.mouse.radius = (this.canvas.height/this.keepRadius) * (this.canvas.width/this.keepRadius)\r\n    }\r\n\r\n    build() {\r\n        this.particles = []\r\n        for (let i = 0; i < this.particlesCount; i++) {\r\n            let size = (Math.random() * 5) + 1;\r\n            let size2 = size * 2\r\n            let x = (Math.random() * ((this.canvas.width - size2) - size2) + size2)\r\n            let y = (Math.random() * ((this.canvas.height - size2) - size2) + size2)\r\n            let directionX = (Math.random() * 2) - 1;\r\n            let directionY = (Math.random() * 2) - 1;\r\n            let color = this.particleColor;\r\n            this.particles.push(new Particle(x, y, directionX, directionY, size, color));\r\n        }\r\n    }\r\n\r\n    animate() {\r\n        requestAnimationFrame(() => this.animate());\r\n\r\n        const { canvas, mouse, particles, ctx } = this;\r\n        ctx!.clearRect(0,0, canvas.width, canvas.height);\r\n\r\n        for (let i = 0; i < particles.length; i++)\r\n            particles[i].update(canvas, mouse, ctx!);\r\n\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        const { particles, canvas, ctx } = this;\r\n        const distD = 7\r\n        let opacityValue = 1.0;\r\n        for (let a = 0; a < particles.length; a++) {\r\n            for (let b = a; b < particles.length; b++) {\r\n                const aX = particles[a].x;\r\n                const aY = particles[a].y;\r\n                const bX = particles[b].x;\r\n                const bY = particles[b].y;\r\n                let distance = (aX - bX) * (aX - bX) + (aY - bY) * (aY - bY);\r\n\r\n                if (distance < (canvas.width/distD) * (canvas.height/distD)) {\r\n                    opacityValue = 0.6 - (distance/10000)\r\n                    ctx!.strokeStyle = `rgba(255,255,255,${opacityValue})`;\r\n                    ctx!.beginPath();\r\n                    ctx?.moveTo(aX, aY);\r\n                    ctx?.lineTo(bX, bY);\r\n                    ctx?.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Particle {\r\n\r\n    x: number;\r\n    y: number;\r\n    directionX: number;\r\n    directionY: number;\r\n    size: number;\r\n    color: string;\r\n\r\n    constructor(x: number, y: number, directionX: number, directionY: number, size: number, color: string) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.directionX = directionX;\r\n        this.directionY = directionY;\r\n        this.size = size;\r\n        this.color = color;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x,this.y, this.size, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n    }\r\n\r\n    update(canvas: HTMLCanvasElement, mouse: Mouse, ctx: CanvasRenderingContext2D) {\r\n        // Keep particle in canvas\r\n        if (this.x > canvas.width || this.x < 0)\r\n            this.directionX = -this.directionX;\r\n        if (this.y > canvas.height || this.y < 0)\r\n            this.directionY = -this.directionY;\r\n\r\n        // Collision with mouse\r\n        const { x, y, radius} = mouse;\r\n        if (x && y) {\r\n            let dx = x - this.x;\r\n            let dy = y - this.y;\r\n            let distance = Math.sqrt(dx*dx + dy*dy);\r\n\r\n            if (distance < radius + this.size) {\r\n                const speed = 3;\r\n                const size10 = this.size * 10;\r\n                if (x < this.x && this.x < canvas.width - size10)\r\n                    this.x += speed;\r\n                if (x > this.x && this.x > size10)\r\n                    this.x -= speed;\r\n                if (y < this.y && this.y < canvas.height - size10)\r\n                    this.y += speed;\r\n                if (y > this.y && this.y > size10)\r\n                    this.y -= speed;\r\n            }\r\n        }\r\n        this.x += this.directionX;\r\n        this.y += this.directionY;\r\n        this.draw(ctx);\r\n    }\r\n}\r\n\r\nexport default ParticleAnimation;","import React, {Component} from 'react';\r\nimport ParticleAnimation from \"../../../app/effects/particles\";\r\n\r\nclass Particles extends Component {\r\n\r\n    particles: React.Ref<HTMLCanvasElement>\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.particles = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // @ts-ignore\r\n        const animation = new ParticleAnimation(this.particles.current,'rgba(255,255,255,0.6)');\r\n        animation.build();\r\n        animation.animate();\r\n    }\r\n\r\n    render() {\r\n        return <canvas ref={this.particles} style={{position:\"fixed\", width:'-webkit-fill-available', zIndex: -1}}/>;\r\n    }\r\n}\r\n\r\nexport default Particles;\r\n","import Navbar from \"./components/frame/navbar\";\nimport Footer from \"./components/frame/footer\";\nimport PageController from './components/PageController';\nimport './assets/scss/app.scss';\nimport './assets/icons/google-material/google-material.css'\nimport Particles from \"./components/pages/common/Particles\";\n\nfunction App() {\n\n    return (\n        <>\n          <Particles/>\n          <Navbar/>\n          <div className='page'>\n              <PageController />\n          </div>\n          <Footer/>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.css';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}